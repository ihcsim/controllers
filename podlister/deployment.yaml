apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: podlister
  namespace: demo
  labels:
    kubernetes.io/name: podlister
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: podlister
  namespace: demo
  labels:
    kubernetes.io/name: podlister
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: podlister
  namespace: demo
  labels:
    kubernetes.io/name: podlister
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: podlister
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: podlister
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podlister
  namespace: demo
  labels:
    kubernetes.io/name: podlister
spec:
  selector:
    matchLabels:
      kubernetes.io/name: podlister
  template:
    metadata:
      labels:
        kubernetes.io/name: podlister
        metrics.demo.io: enabled
    spec:
      serviceAccountName: podlister
      containers:
      - name: podlister
        image: quay.io/isim/podlister
        imagePullPolicy: Always
        command:
        - /podlister
        ports:
        - name: metrics
          containerPort: 8080
        env:
        - name: CONTEXT_TIMEOUT
          value: 30s
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SHOW_ERRORS_ONLY
          value: "true"
        - name: TARGET_NAMESPACE
          value: demo
        - name: TICK_INTERVAL
          value: 300ms
        resources:
          requests:
            cpu: 30m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 128Mi
