//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	storage "github.com/ihcsim/controllers/snapdiff/pkg/apis/storage"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*ChangedBlock)(nil), (*storage.ChangedBlock)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ChangedBlock_To_storage_ChangedBlock(a.(*ChangedBlock), b.(*storage.ChangedBlock), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*storage.ChangedBlock)(nil), (*ChangedBlock)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_storage_ChangedBlock_To_v1alpha1_ChangedBlock(a.(*storage.ChangedBlock), b.(*ChangedBlock), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ChangedBlockSpec)(nil), (*storage.ChangedBlockSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ChangedBlockSpec_To_storage_ChangedBlockSpec(a.(*ChangedBlockSpec), b.(*storage.ChangedBlockSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*storage.ChangedBlockSpec)(nil), (*ChangedBlockSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_storage_ChangedBlockSpec_To_v1alpha1_ChangedBlockSpec(a.(*storage.ChangedBlockSpec), b.(*ChangedBlockSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*storage.ChangedBlockList)(nil), (*ChangedBlockList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_storage_ChangedBlockList_To_v1alpha1_ChangedBlockList(a.(*storage.ChangedBlockList), b.(*ChangedBlockList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ChangedBlockList)(nil), (*storage.ChangedBlockList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ChangedBlockList_To_storage_ChangedBlockList(a.(*ChangedBlockList), b.(*storage.ChangedBlockList), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_ChangedBlock_To_storage_ChangedBlock(in *ChangedBlock, out *storage.ChangedBlock, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ChangedBlockSpec_To_storage_ChangedBlockSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ChangedBlock_To_storage_ChangedBlock is an autogenerated conversion function.
func Convert_v1alpha1_ChangedBlock_To_storage_ChangedBlock(in *ChangedBlock, out *storage.ChangedBlock, s conversion.Scope) error {
	return autoConvert_v1alpha1_ChangedBlock_To_storage_ChangedBlock(in, out, s)
}

func autoConvert_storage_ChangedBlock_To_v1alpha1_ChangedBlock(in *storage.ChangedBlock, out *ChangedBlock, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_storage_ChangedBlockSpec_To_v1alpha1_ChangedBlockSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_storage_ChangedBlock_To_v1alpha1_ChangedBlock is an autogenerated conversion function.
func Convert_storage_ChangedBlock_To_v1alpha1_ChangedBlock(in *storage.ChangedBlock, out *ChangedBlock, s conversion.Scope) error {
	return autoConvert_storage_ChangedBlock_To_v1alpha1_ChangedBlock(in, out, s)
}

func autoConvert_v1alpha1_ChangedBlockList_To_storage_ChangedBlockList(in *ChangedBlockList, out *storage.ChangedBlockList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]storage.ChangedBlock)(unsafe.Pointer(&in.Items))
	return nil
}

func autoConvert_storage_ChangedBlockList_To_v1alpha1_ChangedBlockList(in *storage.ChangedBlockList, out *ChangedBlockList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ChangedBlock)(unsafe.Pointer(&in.Items))
	return nil
}

func autoConvert_v1alpha1_ChangedBlockSpec_To_storage_ChangedBlockSpec(in *ChangedBlockSpec, out *storage.ChangedBlockSpec, s conversion.Scope) error {
	out.SnapshotBase = in.SnapshotBase
	out.SnapshotTarget = in.SnapshotTarget
	out.VolumeID = in.VolumeID
	out.Secrets = *(*map[string]string)(unsafe.Pointer(&in.Secrets))
	out.Parameters = *(*map[string]string)(unsafe.Pointer(&in.Parameters))
	return nil
}

// Convert_v1alpha1_ChangedBlockSpec_To_storage_ChangedBlockSpec is an autogenerated conversion function.
func Convert_v1alpha1_ChangedBlockSpec_To_storage_ChangedBlockSpec(in *ChangedBlockSpec, out *storage.ChangedBlockSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ChangedBlockSpec_To_storage_ChangedBlockSpec(in, out, s)
}

func autoConvert_storage_ChangedBlockSpec_To_v1alpha1_ChangedBlockSpec(in *storage.ChangedBlockSpec, out *ChangedBlockSpec, s conversion.Scope) error {
	out.SnapshotBase = in.SnapshotBase
	out.SnapshotTarget = in.SnapshotTarget
	out.VolumeID = in.VolumeID
	out.Secrets = *(*map[string]string)(unsafe.Pointer(&in.Secrets))
	out.Parameters = *(*map[string]string)(unsafe.Pointer(&in.Parameters))
	return nil
}

// Convert_storage_ChangedBlockSpec_To_v1alpha1_ChangedBlockSpec is an autogenerated conversion function.
func Convert_storage_ChangedBlockSpec_To_v1alpha1_ChangedBlockSpec(in *storage.ChangedBlockSpec, out *ChangedBlockSpec, s conversion.Scope) error {
	return autoConvert_storage_ChangedBlockSpec_To_v1alpha1_ChangedBlockSpec(in, out, s)
}
